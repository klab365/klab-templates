# top-most EditorConfig file
root=true

[*]
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space
tab_width = 4
end_of_line = crlf



# Simplify new expression
dotnet_diagnostic.IDE0090.severity = error

# Use primary constructor (IDE0290)
dotnet_diagnostic.IDE0290.severity = none

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 4

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# Powershell files
[*.ps1]
indent_size = 2

# Shell script files
[*.sh]
end_of_line = lf
indent_size = 2

# Makefile
[Makefile]
indent_style = tab
indent_size = 4

##########################################
# .NET Code Analysis settings
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/configuration-options
##########################################
[*.{cs,csx,cake,vb,vbx}]
dotnet_diagnostic.SA1101.severity = silent
dotnet_diagnostic.SA1614.severity = silent
dotnet_diagnostic.SA1616.severity = silent
dotnet_diagnostic.SA1622.severity = silent
dotnet_diagnostic.SA0001.severity = suggestion
dotnet_diagnostic.SA1633.severity = silent
dotnet_diagnostic.SA1201.severity = silent
dotnet_diagnostic.SA1309.severity = silent
dotnet_diagnostic.CA1848.severity = none
dotnet_diagnostic.CA1305.severity = none
dotnet_diagnostic.IDE0005.severity = error
dotnet_diagnostic.CA1716.severity = none
dotnet_diagnostic.IDE0270.severity = none
dotnet_diagnostic.CA1000.severity = none
dotnet_diagnostic.SA1516.severity = silent

##########################################
# .NET Language Conventions
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions
##########################################
# .NET Code Style Settings
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#net-code-style-settings
[*.{cs,csx,cake,vb,vbx}]
# "this." and "Me." qualifiers
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#this-and-me
dotnet_style_qualification_for_event= false:suggestion
dotnet_style_qualification_for_field= false:suggestion
dotnet_style_qualification_for_method= false:suggestion
dotnet_style_qualification_for_property= false:suggestion

# Language keywords instead of framework type names for type references
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#language-keywords
dotnet_style_predefined_type_for_locals_parameters_members= true:suggestion
dotnet_style_predefined_type_for_member_access= true:suggestion

# Modifier preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#normalize-modifiers
csharp_preferred_modifier_order=public, private, protected, internal, new, abstract, virtual, sealed, override, static, readonly, extern, unsafe, volatile, async:suggestion
dotnet_style_require_accessibility_modifiers= for_non_interface_members:suggestion
dotnet_style_readonly_field= true:suggestion
# Parentheses preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#parentheses-preferences
dotnet_style_parentheses_in_arithmetic_binary_operators= never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators= never_if_unnecessary:none
dotnet_style_parentheses_in_relational_binary_operators= never_if_unnecessary:none
dotnet_style_parentheses_in_other_operators= never_if_unnecessary:none
# Expression-level preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#expression-level-preferences
dotnet_style_collection_initializer= true:suggestion
dotnet_style_explicit_tuple_names= true:suggestion
dotnet_style_object_initializer= true:suggestion
dotnet_style_prefer_auto_properties= true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment= false:suggestion
dotnet_style_prefer_conditional_expression_over_return= false:silent
dotnet_style_prefer_compound_assignment= true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names= false:none
dotnet_style_prefer_inferred_tuple_names= true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method= true:suggestion

# Null-checking preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#null-checking-preferences
dotnet_style_coalesce_expression= true:suggestion
dotnet_style_null_propagation= true:suggestion

# Parameter preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#parameter-preferences
dotnet_code_quality_unused_parameters= all:suggestion

# More style options (Undocumented)
# https://github.com/MicrosoftDocs/visualstudio-docs/issues/3641
dotnet_style_operator_placement_when_wrapping = beginning_of_line

# https://github.com/dotnet/roslyn/pull/40070
dotnet_style_prefer_simplified_interpolation = true:suggestion

##########################################
# C# Code Style Settings
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#c-code-style-settings
##########################################
[*.{cs,csx,cake}]
# Implicit and explicit types
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#implicit-and-explicit-types
csharp_style_var_elsewhere=false:warning
csharp_style_var_for_built_in_types=false:warning
csharp_style_var_when_type_is_apparent=false:silent

# Expression-bodied members
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#expression-bodied-members
csharp_style_expression_bodied_accessors=when_on_single_line:suggestion
csharp_style_expression_bodied_constructors=false:suggestion
csharp_style_expression_bodied_indexers=when_on_single_line:suggestion
csharp_style_expression_bodied_lambdas=when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions=false:suggestion
csharp_style_expression_bodied_methods=false:suggestion
csharp_style_expression_bodied_operators=false:suggestion
csharp_style_expression_bodied_properties=when_on_single_line:suggestion

# Pattern matching
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#pattern-matching
csharp_style_pattern_matching_over_is_with_cast_check=true:suggestion
csharp_style_pattern_matching_over_as_with_null_check=true:suggestion

# Inlined variable declarations
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#inlined-variable-declarations
csharp_style_inlined_variable_declaration=true:suggestion

# Expression-level preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#expression-level-preferences
csharp_prefer_simple_default_expression=true:hint

# "Null" checking preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#c-null-checking-preferences
csharp_style_throw_expression=true:suggestion
csharp_style_conditional_delegate_call=true:suggest

# Code block preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#code-block-preferences
csharp_prefer_braces=true:suggestion

# Unused value preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#unused-value-preferences
csharp_style_unused_value_assignment_preference=unused_local_variable:none
csharp_style_unused_value_expression_statement_preference=unused_local_variable:none

# Index and range preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#index-and-range-preferences
csharp_style_prefer_index_operator=true:suggestion
csharp_style_prefer_range_operator=true:suggestion

# Miscellaneous preferences
# https://docs.microsoft.com/visualstudio/ide/editorconfig-language-conventions#miscellaneous-preferences
csharp_prefer_simple_using_statement=true:hint
csharp_prefer_static_local_function=true:suggestion
csharp_style_deconstructed_variable_declaration=true:hint
csharp_style_pattern_local_over_anonymous_function=true:hint
csharp_using_directive_placement=outside_namespace:warning

csharp_style_implicit_object_creation_when_type_is_apparent=true:hint
csharp_style_prefer_not_pattern=true:suggestion
csharp_style_prefer_pattern_matching=true:hint
csharp_style_prefer_switch_expression=true:suggestion
dotnet_style_prefer_simplified_boolean_expressions=true:suggestion

csharp_style_var_elsewhere= false:warning
csharp_style_var_for_built_in_types= false:warning
csharp_style_var_when_type_is_apparent= false:silent
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = false:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_assignment_preference = unused_local_variable:none
csharp_style_unused_value_expression_statement_preference = unused_local_variable:none
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_prefer_static_local_function = true:suggestion
csharp_indent_labels = flush_left
csharp_space_around_binary_operators = before_and_after
csharp_using_directive_placement = outside_namespace:warning
csharp_space_between_method_call_empty_parameter_list_parentheses = true
csharp_space_between_method_call_parameter_list_parentheses = true
csharp_space_between_method_declaration_name_and_open_parenthesis = false



##########################################
# .NET Formatting Conventions
# https://docs.microsoft.com/visualstudio/ide/editorconfig-code-style-settings-reference#formatting-conventions
##########################################
# Organize using directives
# https://docs.microsoft.com/visualstudio/ide/editorconfig-formatting-conventions#organize-using-directives
dotnet_sort_system_directives_first=true
dotnet_separate_import_directive_groups=false

# New-line options
# https://docs.microsoft.com/visualstudio/ide/editorconfig-formatting-conventions#new-line-options
csharp_new_line_before_open_brace = methods, properties, control_blocks, types, local_functions, object_collection_array_initializers, accessors, lambdas
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation options
# https://docs.microsoft.com/visualstudio/ide/editorconfig-formatting-conventions#indentation-options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = true

# Spacing options
# https://docs.microsoft.com/visualstudio/ide/editorconfig-formatting-conventions#spacing-options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses= #apply to none
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Wrap options
# https://docs.microsoft.com/visualstudio/ide/editorconfig-formatting-conventions#wrap-options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

##########################################
# .NET Naming Conventions
# https://docs.microsoft.com/visualstudio/ide/editorconfig-naming-conventions
##########################################
[*.{cs,csx,cake,vb,vbx}]
# camel_case_style - Define the camelCase style
dotnet_naming_style.camel_case_style.capitalization = camel_case

# underscore_camel_case_style - Define the _camelCase style
dotnet_naming_style.underscore_camel_case_style.capitalization = camel_case
dotnet_naming_style.underscore_camel_case_style.required_prefix = _

# pascal_case_style - Define the PascalCase style
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# prefix_interface_with_i_style - Interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.prefix_interface_with_i_style.capitalization = pascal_case
dotnet_naming_style.prefix_interface_with_i_style.required_prefix = I

# prefix_type_parameters_with_t_style - Generic Type Parameters must be PascalCase and the first character must be a 'T'
dotnet_naming_style.prefix_type_parameters_with_t_style.capitalization = pascal_case
dotnet_naming_style.prefix_type_parameters_with_t_style.required_prefix = T

##########################################
# Naming rules for fields follow the .NET Framework design guidelines
# https://docs.microsoft.com/dotnet/standard/design-guidelines/index
##########################################
[*.{cs,csx,cake,vb,vbx}]
# All public/protected/protected_internal constant fields must be PascalCase
dotnet_naming_symbols.public_protected_constant_fields_symbol.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_protected_constant_fields_symbol.required_modifiers         = const
dotnet_naming_symbols.public_protected_constant_fields_symbol.applicable_kinds           = field
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.symbols     = public_protected_constant_fields_symbol
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.style = pascal_case_style
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.severity = warning

# All public/protected/protected_internal static readonly fields must be PascalCase
dotnet_naming_symbols.public_protected_static_readonly_fields_symbol.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_protected_static_readonly_fields_symbol.required_modifiers         = static, readonly
dotnet_naming_symbols.public_protected_static_readonly_fields_symbol.applicable_kinds           = field
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.symbols     = public_protected_static_readonly_fields_symbol
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.style = pascal_case_style
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.severity = warning

# No other public/protected/protected_internal fields are allowed
dotnet_naming_symbols.other_public_protected_fields_symbol.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.other_public_protected_fields_symbol.applicable_kinds           = field
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.symbols              = other_public_protected_fields_symbol
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.style                = disallowed_style
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.severity             = warning

# All constant fields must be PascalCase
dotnet_naming_symbols.constant_fields_symbol.applicable_accessibilities = public, internal, protected_internal, protected, private_protected, private
dotnet_naming_symbols.constant_fields_symbol.required_modifiers         = const
dotnet_naming_symbols.constant_fields_symbol.applicable_kinds           = field
dotnet_naming_rule.constant_fields_must_be_pascal_case_rule.symbols     = constant_fields_symbol
dotnet_naming_rule.constant_fields_must_be_pascal_case_rule.style = pascal_case_style
dotnet_naming_rule.constant_fields_must_be_pascal_case_rule.severity = warning

# Non-private static readonly fields must be PascalCase
dotnet_naming_symbols.static_readonly_fields_symbol.applicable_accessibilities = public, internal, protected_internal, protected, private_protected
dotnet_naming_symbols.static_readonly_fields_symbol.required_modifiers         = static, readonly
dotnet_naming_symbols.static_readonly_fields_symbol.applicable_kinds           = field
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case_rule.symbols     = static_readonly_fields_symbol
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case_rule.style = pascal_case_style
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case_rule.severity = warning

# Non-private static fields must be PascalCase
dotnet_naming_symbols.static_fields_symbol.applicable_accessibilities = public, internal, protected_internal, protected, private_protected
dotnet_naming_symbols.static_fields_symbol.required_modifiers         = static
dotnet_naming_symbols.static_fields_symbol.applicable_kinds           = field
dotnet_naming_rule.static_fields_must_be_pascal_case_rule.symbols     = static_fields_symbol
dotnet_naming_rule.static_fields_must_be_pascal_case_rule.style = pascal_case_style
dotnet_naming_rule.static_fields_must_be_pascal_case_rule.severity = warning

# Private static fields must be PascalCase
dotnet_naming_symbols.private_static_fields_symbol.applicable_accessibilities            = private
dotnet_naming_symbols.private_static_fields_symbol.required_modifiers                    = static
dotnet_naming_symbols.private_static_fields_symbol.applicable_kinds                      = field
dotnet_naming_rule.private_static_fields_must_be_underscore_camel_case_rule.symbols      = private_static_fields_symbol
dotnet_naming_rule.private_static_fields_must_be_underscore_camel_case_rule.style = pascal_case_style
dotnet_naming_rule.private_static_fields_must_be_underscore_camel_case_rule.severity = warning

# Private fields must be _camelCase
dotnet_naming_symbols.private_fields_symbol.applicable_accessibilities            = private
dotnet_naming_symbols.private_fields_symbol.applicable_kinds                      = field
dotnet_naming_rule.private_fields_must_be_underscore_camel_case_rule.symbols      = private_fields_symbol
dotnet_naming_rule.private_fields_must_be_underscore_camel_case_rule.style = underscore_camel_case_style
dotnet_naming_rule.private_fields_must_be_underscore_camel_case_rule.severity = warning

# Non-private instance fields are disallowed
dotnet_naming_symbols.fields_must_be_private_symbol.applicable_accessibilities = public, internal, protected_internal, protected, private_protected
dotnet_naming_symbols.fields_must_be_private_symbol.applicable_kinds           = field
dotnet_naming_rule.instance_fields_must_be_private_rule.symbols                = fields_must_be_private_symbol
dotnet_naming_rule.instance_fields_must_be_private_rule.style                  = disallowed_style
dotnet_naming_rule.instance_fields_must_be_private_rule.severity               = warning

# Local variables must be camelCase
dotnet_naming_symbols.local_fields_symbol.applicable_accessibilities = local
dotnet_naming_symbols.local_fields_symbol.applicable_kinds           = local
dotnet_naming_rule.local_fields_must_be_camel_case_rule.symbols      = local_fields_symbol
dotnet_naming_rule.local_fields_must_be_camel_case_rule.style = camel_case_style
dotnet_naming_rule.local_fields_must_be_camel_case_rule.severity = warning

# This rule should never fire.  However, it's included for at least two purposes:
# First, it helps to understand, reason about, and root-case certain types of issues, such as bugs in .editorconfig parsers.
# Second, it helps to raise immediate awareness if a new field type is added (as occurred recently in C#).
dotnet_naming_symbols.sanity_check_uncovered_field_case_symbol.applicable_accessibilities = *
dotnet_naming_symbols.sanity_check_uncovered_field_case_symbol.applicable_kinds           = field
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.symbols                         = sanity_check_uncovered_field_case_symbol
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.style                           = internal_error_style
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.severity                        = error

# All of the following must be PascalCase:
# - Namespaces
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-namespaces
# - Classes and Enumerations
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
# - Delegates
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces#names-of-common-types
# - Constructors, Properties, Events, Methods, Local Functions
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-type-members
dotnet_naming_symbols.element_symbol.applicable_kinds = namespace, class, enum, struct, delegate, event, method, property, local_function
dotnet_naming_rule.element_rule.symbols               = element_symbol
dotnet_naming_rule.element_rule.style = pascal_case_style
dotnet_naming_rule.element_rule.severity = warning

# Interfaces use PascalCase and are prefixed with uppercase 'I'
# https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.interface_symbol.applicable_kinds = interface
dotnet_naming_rule.interface_rule.symbols               = interface_symbol
dotnet_naming_rule.interface_rule.style = prefix_interface_with_i_style
dotnet_naming_rule.interface_rule.severity = error

# Generics Type Parameters use PascalCase and are prefixed with uppercase 'T'
# https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.type_parameter_symbol.applicable_kinds = type_parameter
dotnet_naming_rule.type_parameter_rule.symbols               = type_parameter_symbol
dotnet_naming_rule.type_parameter_rule.style = prefix_type_parameters_with_t_style
dotnet_naming_rule.type_parameter_rule.severity = error

# Function parameters use camelCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/naming-parameters
dotnet_naming_symbols.parameters_symbol.applicable_kinds = parameter
dotnet_naming_rule.parameters_rule.symbols               = parameters_symbol
dotnet_naming_rule.parameters_rule.style = camel_case_style
dotnet_naming_rule.parameters_rule.severity = warning
